# Generated by Django 4.2.6 on 2024-06-10 05:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import register.custom_utils.custom


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllAccountId',
            fields=[
                ('generated_id', models.CharField(max_length=9, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationKey',
            fields=[
                ('generated_key', models.CharField(max_length=19, primary_key=True, serialize=False, unique=True)),
                ('key_type', models.CharField(choices=[('STU', 'Student'), ('PAR', 'Parent'), ('EMP', 'Employee')], max_length=3)),
                ('generated_for', models.CharField(max_length=255)),
                ('year_level', models.CharField(choices=[('EMS1', 'Elementary School 1'), ('EMS2', 'Elementary School 2'), ('EMS3', 'Elementary School 3'), ('EMS4', 'Elementary School 4'), ('EMS5', 'Elementary School 5'), ('EMS6', 'Elementary School 6'), ('MDS1', 'Middle School 1'), ('MDS2', 'Middle School 2'), ('MDS3', 'Middle School 3'), ('MDS4', 'Middle School 4'), ('SHS1', 'High School 1'), ('SHS2', 'High School 2'), ('SHS3', 'High School 3'), ('SHS4', 'High School 4'), ('COL1', 'College Level 1'), ('COL2', 'College Level 2'), ('COL3', 'College Level 3'), ('COL4', 'College Level 4'), ('COL5', 'College Level 5'), ('LAW1', 'Law 1'), ('LAW2', 'Law 2'), ('LAW3', 'Law 3'), ('LAW4', 'Law 4'), ('MST1', 'Masters 1'), ('MST2', 'Masters 2'), ('MST3', 'Masters 3'), ('PHD1', 'Doctorate 1'), ('PHD2', 'Doctorate 2'), ('PHD3', 'Doctorate 3'), ('PHD4', 'Doctorate 4'), ('PHD5', 'Doctorate 5'), ('PHD6', 'Doctorate 6'), ('PHD7', 'Doctorate 7')])),
                ('key_expiry', models.DateField()),
                ('key_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AllAccount',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='register.allaccountid')),
                ('account_type', models.CharField(choices=[('STU', 'Student'), ('PAR', 'Parent'), ('EMP', 'Employee')], db_index=True, max_length=3)),
                ('email', models.EmailField(db_index=True, max_length=150, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('allow_login', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. Users are granted permissions relative to the groups they belong to', related_name='common_user_groups', to='auth.group', verbose_name='common user groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific user permissions.', related_name='common_user_permissions', to='auth.permission', verbose_name='common user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDetail',
            fields=[
                ('account_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=80)),
                ('middle_name', models.CharField(default=None, max_length=80, null=True)),
                ('last_name', models.CharField(max_length=80)),
                ('suffix', models.CharField(choices=[('JR', 'Junior'), ('SR', 'Senior'), ('II', 'The second'), ('III', 'The third'), ('IV', 'The fourth'), ('V', 'The fifth')], max_length=3, null=True)),
                ('birthday', models.DateField(validators=[register.custom_utils.custom.staff_parent_age_validator])),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message="Phone number must follow the format '+99999999' between 8-15 digits long.", regex='^\\+?\\d{8,15}$')])),
                ('employment_type', models.CharField(choices=[('T', 'Teacher'), ('A', 'Administrative Staff'), ('S', 'Other Staff'), ('D', 'Dean')], max_length=1)),
                ('status', models.CharField(choices=[('P', 'Probationary'), ('R', 'Regular'), ('S', 'Suspended'), ('T', 'Terminated')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='StudentDetail',
            fields=[
                ('account_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('last_name', models.CharField(max_length=80)),
                ('first_name', models.CharField(max_length=80)),
                ('middle_name', models.CharField(default=None, max_length=80, null=True)),
                ('suffix', models.CharField(choices=[('JR', 'Junior'), ('SR', 'Senior'), ('II', 'The second'), ('III', 'The third'), ('IV', 'The fourth'), ('V', 'The fifth')], max_length=3, null=True)),
                ('birthday', models.DateField(validators=[register.custom_utils.custom.student_age_validator])),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=16, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must follow the format '+99999999' between 8-15 digits long.", regex='^\\+?\\d{8,15}$')])),
                ('status', models.CharField(choices=[('N', 'New account, not yet activated'), ('A', 'Active'), ('E', 'Expelled'), ('S', 'Suspended'), ('D', 'Dropped out'), ('G', 'Graduated'), ('X', 'Did not enroll this year')], default='N', max_length=1)),
                ('current_yr_lvl', models.CharField(choices=[('EMS1', 'Elementary School 1'), ('EMS2', 'Elementary School 2'), ('EMS3', 'Elementary School 3'), ('EMS4', 'Elementary School 4'), ('EMS5', 'Elementary School 5'), ('EMS6', 'Elementary School 6'), ('MDS1', 'Middle School 1'), ('MDS2', 'Middle School 2'), ('MDS3', 'Middle School 3'), ('MDS4', 'Middle School 4'), ('SHS1', 'High School 1'), ('SHS2', 'High School 2'), ('SHS3', 'High School 3'), ('SHS4', 'High School 4'), ('COL1', 'College Level 1'), ('COL2', 'College Level 2'), ('COL3', 'College Level 3'), ('COL4', 'College Level 4'), ('COL5', 'College Level 5'), ('LAW1', 'Law 1'), ('LAW2', 'Law 2'), ('LAW3', 'Law 3'), ('LAW4', 'Law 4'), ('MST1', 'Masters 1'), ('MST2', 'Masters 2'), ('MST3', 'Masters 3'), ('PHD1', 'Doctorate 1'), ('PHD2', 'Doctorate 2'), ('PHD3', 'Doctorate 3'), ('PHD4', 'Doctorate 4'), ('PHD5', 'Doctorate 5'), ('PHD6', 'Doctorate 6'), ('PHD7', 'Doctorate 7')], max_length=4)),
                ('scholarship_type', models.CharField(blank=True, choices=[('N', 'Not a scholar'), ('H', 'Half scholarship'), ('F', 'Full scholarship')], default='N', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='ParentDetail',
            fields=[
                ('account_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=80)),
                ('middle_name', models.CharField(default=None, max_length=80, null=True)),
                ('last_name', models.CharField(max_length=80)),
                ('suffix', models.CharField(choices=[('JR', 'Junior'), ('SR', 'Senior'), ('II', 'The second'), ('III', 'The third'), ('IV', 'The fourth'), ('V', 'The fifth')], max_length=3, null=True)),
                ('birthday', models.DateField(validators=[register.custom_utils.custom.staff_parent_age_validator])),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message="Phone number must follow the format '+99999999' between 8-15 digits long.", regex='^\\+?\\d{8,15}$')])),
                ('relationship', models.CharField(choices=[('F', 'Father'), ('M', 'Mother'), ('S', 'Sibling'), ('R', 'Relative'), ('G', 'Legal Guardian')], max_length=1)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='register.studentdetail')),
            ],
        ),
    ]
